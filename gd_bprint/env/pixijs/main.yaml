__invalid:
  replacer: "undefined"

__default:
  f_:
    flow: 2
    slot: 2
    type: label
  i_:
    flow: 0
    slot: 0 
    type: label
  o_:
    flow: 1
    slot: 1 
    type: label
  btn_:
    flow: 3
    slot: 3
    type: items

__basic:
  flow: 0
  bool: 1
  int: 2
  float: 3
  string: 4
  Array: 2
      
# 特性
features:
  drag:
    f_:
      ctx: "if($i_con){$f_true}else{$f_false};\n"
      slot: 1
    i_default:
      u_source: no_default
  
  scroll:
    f_:
      ctx: "if($i_con){$f_true}else{$f_false};\n"
      slot: 1
    i_touch:
      u_source: no_touch
    i_wheel:
      u_source: no_wheel
  
  dynamic_grid:
    f_:
      ctx: "if($i_con){$f_true}else{$f_false};\n"
      slot: 1
    i_col:
      u_source: col
    i_line:
      u_source: line
  
  dynamic_tree:
    f_:
      ctx: "if($i_con){$f_true}else{$f_false};\n"
      slot: 1
    i_tab:
      u_source: tab
  
  dynamic_graph:
    f_:
      ctx: "if($i_con){$f_true}else{$f_false};\n"
      slot: 1
    i_line:
      u_source: line
  
  dynamic:
    i_source:
      u_source: source

  dynamic_item:
    i_key:
      u_source: key
    btn_add:
      type: add
      target: items
  
  cut:
    i_x:
      u_source: x
    i_y:
      u_source: "y"
    i_width:
      u_source: width
    i_height:
      u_source: height
  
  cut_tile:
    i_index:
      u_source: index
    i_pw:
      u_source: pw
    i_ph:
      u_source: ph

  cut_object:
    i_object:
      u_source: object

  scroll_bar:
    i_window:
      u_source: window
    i_bar:
      u_source: bar

  size_flag:
    f_:
      ctx: "if($i_con){$f_true}else{$f_false};\n"
      slot: 1
    i_align_x:
      u_source: align_x
    i_align_y:
      u_source: align_y
    i_margin_x:
      u_source: margin_x
    i_margin_y:
      u_source: margin_y
  
  graphics_circle:
    i_radius:
      u_source: radius
    i_angle_start:
      u_source: angle_start
    i_angle_end:
      u_source: angle_end
  
  graphics_rect:
    i_width:
      u_source: width
    i_height:
      u_source: height
    i_round:
      u_source: round
  
  style:
    f_:
      ctx: "$i_arr.forEach((item, i)=>{$f_body});\n"
      slot: 1
    i_color:
      u_source: color
    i_outline_color:
      u_source: outline_color
    i_outline_width:
      u_source: outline_width
    i_size:
      u_source: size
    i_align:
      u_source: align
  
  mask:
    i_mask:
      u_source: mask

  anchor:
    i_x:
      u_source: x
    i_y:
      u_source: "y"

  note:
    i_name:
      u_source: name
    i_any:
      u_source: any
    
# 高级配置
advance:
  
  color:
    o_value:
      type: colorer
  
  string:
    o_value:
      type: string

  number:
    o_count:
      type: string
      ctx: "$o_count"
  
  array:
    btn_add:
      type: add
      u_source: add
      target: label

  object:
    btn_add:
      type: add
      u_source: add
      target: string
  
  json:
    i_source:
      u_source: source
    o_out:
      u_source: out
  
  copy:
    f_:
      ctx: "if($i_con){$f_true}else{$f_false};\n"
      slot: 1
    i_source:
      u_source: source

  sign:
    o_type:
      type: items
      u_source: ["undefined", "null", "true", "false", "In"]
  
  op:
    i_a:
      u_source: "a"
    o_op:
      type: items
      u_source: ["+", "-", "/", "%", "*"]
      ctx: "$i_a $o_op $i_b"
    i_b:
      u_source: "b"
  
  tween:
    i_a:
      u_source: a
    i_b:
      u_source: b
    i_time:
      u_source: time
    i_auto:
      u_source: auto
    i_auto_delay:
      u_source: auto_delay
    i_lerp:
      u_source: lerp
  
  vec2:
    i_x:
      u_source: x
    i_y:
      u_source: "y"
  
  # 没有直接配置到节点中的函数可以通过这种方式调用, 通常只能是静态/非实例函数
  fn:
    i_name:
      u_source: name
    i_args:
      u_source: args
  
  


base:

  output:
    i_output:
      u_source: output
    i_global:
      u_source: global_ref
    i_hot_refresh:
      u_source: hot_refresh

  __ENTRY:
    f_:
      slot: 1

  window:
    f_:
      ctx: "if($i_con){$f_true}else{$f_false};\n"
      slot: 1
    i_x:
      u_source: x
    i_y:
      u_source: "y"
    i_width:
      u_source: width
    i_height:
      u_source: height
    i_alpha:
      u_source: alpha
    i_children:
      u_source: children
    i_features:
      u_source: features
  
  sprite:
    f_:
      ctx: "for(let item in $i_object){$f_body};\n"
      slot: 1
    i_x:
      u_source: x
    i_y:
      u_source: "y"
    i_width:
      u_source: width
    i_height:
      u_source: height
    i_alpha:
      u_source: alpha
    i_tex:
      u_source: tex
    i_children:
      u_source: children
    i_features:
      u_source: features

  graphics:
    i_x:
      u_source: x
    i_y:
      u_source: "y"
    i_alpha:
      u_source: alpha
    i_children:
      u_source: children
    i_features:
      u_source: features
      
  text:
    f_:
      ctx: "$i_arr.forEach((item, i)=>{$f_body});\n"
      slot: 1
    i_x:
      u_source: x
    i_y:
      u_source: "y"
    i_alpha:
      u_source: alpha
    i_children:
      u_source: children
    i_features:
      u_source: features

  
  

    
